name: Backend CI/CD

on:
  push:
    branches: ["deploy"]
    paths:
      - "backend/**"
      - ".github/workflows/**"

jobs:
  build:
    runs-on: self-hosted
    env:
      # Map secret to env so we can reference it in steps/if:
      PROPENU_ENV: ${{ secrets.PROPENU_ENV }}

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: |
            backend/gateway/package-lock.json
            backend/services/auth/package-lock.json
            backend/services/user/package-lock.json
            backend/services/payment/package-lock.json
            backend/services/property/package-lock.json

      # ====== GATEWAY ======
      - name: Install gateway deps (prod only)
        working-directory: backend/gateway
        run: npm ci --omit=dev --no-audit --no-fund

      - name: Create gateway .env (if provided)
        if: ${{ env.PROPENU_ENV != '' }}
        working-directory: backend/gateway
        shell: bash
        run: |
          printf "%s" "${PROPENU_ENV}" > .env

      - name: Build gateway (if script exists)
        working-directory: backend/gateway
        shell: bash
        run: |
          if npm run | grep -qE '(^|\s)build(\s|:)'; then npm run build; fi

      # ====== SERVICES ======
      - name: Install auth deps (prod only)
        working-directory: backend/services/auth
        run: npm ci --omit=dev --no-audit --no-fund

      - name: Install user deps (prod only)
        working-directory: backend/services/user
        run: npm ci --omit=dev --no-audit --no-fund

      - name: Install payment deps (prod only)
        working-directory: backend/services/payment
        run: npm ci --omit=dev --no-audit --no-fund

      - name: Install property deps (prod only)
        working-directory: backend/services/property
        run: npm ci --omit=dev --no-audit --no-fund

      # Optional: build each service if they define a build script
      - name: Build services (if needed)
        shell: bash
        run: |
          for dir in backend/services/*; do
            if [ -f "$dir/package.json" ] && (cd "$dir" && npm run | grep -qE '(^|\s)build(\s|:)'); then
              (cd "$dir" && npm run build)
            fi
          done
