name: Backend CI/CD

on:
  push:
    branches: ["deploy"]
    paths:
      - "backend/**"

jobs:
  build:
    runs-on: self-hosted
    env:
      PROPENU_ENV: ${{ secrets.PROPENU_ENV }}
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          # ✅ match your real paths (or use the single-glob below)
          cache-dependency-path: |
            backend/gateway/package-lock.json
            backend/services/auth-service/package-lock.json
            backend/services/user-service/package-lock.json
            backend/services/payment-service/package-lock.json
            backend/services/property-service/package-lock.json

      - name: Debug – show lockfiles (helps if cache fails)
        run: |
          ls -la backend/gateway || true
          ls -la backend/services/auth-service || true
          ls -la backend/services/user-service || true
          ls -la backend/services/payment-service || true
          ls -la backend/services/property-service || true

      # ====== GATEWAY ======
      - name: Install gateway deps (with dev for build)
        working-directory: backend/gateway
        run: npm ci --no-audit --no-fund

      - name: Create gateway .env (if provided)
        if: ${{ env.PROPENU_ENV != '' }}
        working-directory: backend/gateway
        shell: bash
        run: |
          printf "%s" "${PROPENU_ENV}" > .env

      - name: Build gateway (if script exists)
        working-directory: backend/gateway
        shell: bash
        run: |
          if npm run | grep -qE '(^|\s)build(\s|:)'; then npm run build; else echo "No build script"; fi

      - name: Prune gateway dev deps for deploy artifacts (optional)
        working-directory: backend/gateway
        run: npm prune --omit=dev

      # ====== SERVICES ======
      - name: Install service deps (with dev for build)
        shell: bash
        run: |
          for dir in backend/services/*-service; do
            if [ -f "$dir/package.json" ]; then
              echo "Installing deps in $dir"
              (cd "$dir" && npm ci --no-audit --no-fund)
            fi
          done

      - name: Build services (if build script exists)
        shell: bash
        run: |
          for dir in backend/services/*-service; do
            if [ -f "$dir/package.json" ]; then
              if (cd "$dir" && npm run | grep -qE '(^|\s)build(\s|:)'); then
                echo "Building $dir"
                (cd "$dir" && npm run build)
              else
                echo "No build script in $dir"
              fi
            fi
          done

      - name: Prune service dev deps (optional)
        shell: bash
        run: |
          for dir in backend/services/*-service; do
            if [ -f "$dir/package.json" ]; then
              echo "Pruning dev deps in $dir"
              (cd "$dir" && npm prune --omit=dev)
            fi
          done
